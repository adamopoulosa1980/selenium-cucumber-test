# Parameter Definitions
param.user1.username=testuser@example.com
param.user1.password=Password123
param.user1.firstName=John
param.item1.id=item-123
param.order.id=order123
param.jsonFile.path=src/test/resources/files/test.json
param.pdfFile.path=src/test/resources/files/test.pdf

# User Journey with Navigation and Conditions
test.user_journey.description=Complete user journey
test.user_journey.actions[0].page=login
test.user_journey.actions[0].element=username
test.user_journey.actions[0].action=enter
test.user_journey.actions[0].value=${param.user1.username}
test.user_journey.actions[1].page=login
test.user_journey.actions[1].element=password
test.user_journey.actions[1].action=enter
test.user_journey.actions[1].value=${param.user1.password}
test.user_journey.actions[2].page=login
test.user_journey.actions[2].element=loginButton
test.user_journey.actions[2].action=click
test.user_journey.actions[3].action=navigate
test.user_journey.actions[3].targetPage=cart
test.user_journey.actions[3].wait.visible.element=cartCount
test.user_journey.actions[4].page=cart
test.user_journey.actions[4].element=addToCart
test.user_journey.actions[4].action=click
test.user_journey.actions[4].wait.custom.script=document.getElementById('cartCount').innerText != '0'
test.user_journey.actions[5].page=cart
test.user_journey.actions[5].action=saveState
test.user_journey.actions[5].stateKey=cartSession
test.user_journey.actions[6].page=cart
test.user_journey.actions[6].element=navToCheckout
test.user_journey.actions[6].action=navigate
test.user_journey.actions[6].targetPage=checkout
test.user_journey.assertions[0].page=checkout
test.user_journey.assertions[0].type=url
test.user_journey.assertions[0].value=/checkout
test.user_journey.assertions[0].condition=contains

# Data-Driven Test
test.login_multi_users.description=Login with multiple users
test.login_multi_users.dataFile=testdata/users.csv
test.login_multi_users.resetDriverPerIteration=true
test.login_multi_users.startPage=login
test.login_multi_users.actions[0].action=navigate
test.login_multi_users.actions[0].targetPage=login
test.login_multi_users.actions[1].page=login
test.login_multi_users.actions[1].element=username
test.login_multi_users.actions[1].action=enter
test.login_multi_users.actions[1].value=${data.username}
test.login_multi_users.actions[2].page=login
test.login_multi_users.actions[2].element=password
test.login_multi_users.actions[2].action=enter
test.login_multi_users.actions[2].value=${data.password}
test.login_multi_users.actions[3].page=login
test.login_multi_users.actions[3].element=loginButton
test.login_multi_users.actions[3].action=click
test.login_multi_users.actions[4].action=navigate
test.login_multi_users.actions[4].targetPage=cart
test.login_multi_users.assertions[0].type=url
test.login_multi_users.assertions[0].value=/cart
test.login_multi_users.assertions[0].condition=equals

# External System Interaction Test
test.order_processing.description=Order processing with external systems
test.order_processing.actions[0].page=login
test.order_processing.actions[0].element=username
test.order_processing.actions[0].action=enter
test.order_processing.actions[0].value=${param.user1.username}
test.order_processing.actions[1].page=login
test.order_processing.actions[1].element=password
test.order_processing.actions[1].action=enter
test.order_processing.actions[1].value=${param.user1.password}
test.order_processing.actions[2].page=login
test.order_processing.actions[2].element=loginButton
test.order_processing.actions[2].action=click
test.order_processing.actions[3].action=navigate
test.order_processing.actions[3].targetPage=cart
test.order_processing.actions[4].page=cart
test.order_processing.actions[4].element=addToCart
test.order_processing.actions[4].action=click
test.order_processing.actions[5].action=kafkaProduce
test.order_processing.actions[5].kafka.topic=order-created
test.order_processing.actions[5].kafka.key=${param.order.id}
test.order_processing.actions[5].kafka.value={"orderId": "${param.order.id}", "user": "${param.user1.username}"}
test.order_processing.actions[6].action=restCall
test.order_processing.actions[6].rest.method=POST
test.order_processing.actions[6].rest.url=https://api.example.com/verify-order
test.order_processing.actions[6].rest.body={"orderId": "${param.order.id}"}
test.order_processing.actions[6].rest.header.Content-Type=application/json
test.order_processing.actions[7].action=kafkaConsume
test.order_processing.actions[7].kafka.topic=order-processed
test.order_processing.actions[7].kafka.key=${param.order.id}
test.order_processing.actions[7].kafka.valueContains="status": "processed"
test.order_processing.actions[7].wait.timeout=15
test.order_processing.actions[8].page=cart
test.order_processing.actions[8].element=navToCheckout
test.order_processing.actions[8].action=navigate
test.order_processing.actions[8].targetPage=checkout
test.order_processing.assertions[0].page=checkout
test.order_processing.assertions[0].type=url
test.order_processing.assertions[0].value=/checkout
test.order_processing.assertions[0].condition=contains

# JSON Upload Test
test.json_upload.description=Upload JSON file to start a process
test.json_upload.actions[0].page=upload
test.json_upload.actions[0].element=jsonUpload
test.json_upload.actions[0].action=uploadFile
test.json_upload.actions[0].value=${param.jsonFile.path}
test.json_upload.actions[1].page=upload
test.json_upload.actions[1].element=submitButton
test.json_upload.actions[1].action=click
test.json_upload.actions[2].action=kafkaConsume
test.json_upload.actions[2].kafka.topic=process-started
test.json_upload.actions[2].kafka.key=json-process
test.json_upload.actions[2].kafka.valueContains="status": "initiated"
test.json_upload.assertions[0].page=upload
test.json_upload.assertions[0].element=successMessage
test.json_upload.assertions[0].type=visible
test.json_upload.assertions[0].condition=true

# PDF Upload Test
test.pdf_upload.description=Upload PDF document
test.pdf_upload.actions[0].page=upload
test.pdf_upload.actions[0].element=pdfUpload
test.pdf_upload.actions[0].action=uploadFile
test.pdf_upload.actions[0].value=${param.pdfFile.path}
test.pdf_upload.actions[1].page=upload
test.pdf_upload.actions[1].element=submitButton
test.pdf_upload.actions[1].action=click
test.pdf_upload.assertions[0].page=upload
test.pdf_upload.assertions[0].element=successMessage
test.pdf_upload.assertions[0].type=visible
test.pdf_upload.assertions[0].condition=true